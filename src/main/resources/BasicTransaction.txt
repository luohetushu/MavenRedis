Redis 事务
Redis 事务可以一次执行多个命令，并且带有以下三个重要的保证：
    1、批量操作在发送 EXEC 命令前被放入队列缓存。
    2、收到 EXEC 命令后进入事务执行，事务中任意命令执行失败，其余的命令依然被执行。
    3、在事务执行过程，其他客户端提交的命令请求不会插入到事务执行命令序列中。

一个事务从开始到执行会经历以下三个阶段：
    开始事务   // 命令 MULTI 开启事务
    命令入队   // 多条命令入队列
    执行事务   // 命令 EXEC 执行事务

事务命令：
MULTI    标记一个事务块的开始
WATCH key [key ...]   监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断
UNWATCH   取消 WATCH 命令对所有 key 的监视
DISCARD  取消事务，放弃执行事务块内的所有命令
EXEC    执行所有事务块内的命令

如：redis 127.0.0.1:6379> MULTI  // 开启事务
   OK

   redis 127.0.0.1:6379> SET book-name "Mastering C++ in 21 days"  // 命令 1 入队列
   QUEUED
   redis 127.0.0.1:6379> GET book-name   // 命令 2 入队列
   QUEUED
   redis 127.0.0.1:6379> SADD tag "C++" "Programming" "Mastering Series"
   QUEUED
   redis 127.0.0.1:6379> SMEMBERS tag
   QUEUED

   redis 127.0.0.1:6379> EXEC   // 执行事务
   1) OK   // 执行命令1后结果
   2) "Mastering C++ in 21 days"
   3) (integer) 3
   4) 1) "Mastering Series"
      2) "C++"
      3) "Programming"

注：单个 Redis 命令的执行是原子性的
   但 Redis 事务的执行不是原子性的，中间某条指令的失败不会导致前面已做指令的回滚，也不会造成后续的指令不做



